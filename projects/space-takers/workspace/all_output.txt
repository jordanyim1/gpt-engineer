Sure, we can use Pygame's drawing functions to create simple shapes for the player, enemies, and bullets. Here's how we can modify the `Player`, `Enemy`, and `Bullet` classes:

player.py
```python
import pygame
from bullet import Bullet

class Player(pygame.sprite.Sprite):
    def __init__(self, game):
        super().__init__()
        self.game = game
        self.image = pygame.Surface((50, 50), pygame.SRCALPHA)
        pygame.draw.circle(self.image, (0, 0, 255), (25, 25), 25)
        self.rect = self.image.get_rect(center=(400, 300))
        self.bullets = pygame.sprite.Group()

    # ... rest of the class remains the same ...
```

enemy.py
```python
import pygame

class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        pygame.draw.rect(self.image, (255, 0, 0), (0, 0, 50, 50))
        self.rect = self.image.get_rect(topleft=(800, 300))

    # ... rest of the class remains the same ...
```

bullet.py
```python
import pygame

class Bullet(pygame.sprite.Sprite):
    def __init__(self, player):
        super().__init__()
        self.image = pygame.Surface((10, 10), pygame.SRCALPHA)
        pygame.draw.circle(self.image, (255, 255, 0), (5, 5), 5)
        self.rect = self.image.get_rect(center=player.rect.center)

    # ... rest of the class remains the same ...
```

In the `Player` and `Bullet` classes, we're using `pygame.SRCALPHA` to make the surface transparent, so that the circle doesn't have a square background. In the `Enemy` class, we're drawing a red square on the surface. The `(0, 0, 255)`, `(255, 0, 0)`, and `(255, 255, 0)` tuples represent the colors blue, red, and yellow in RGB format, respectively.